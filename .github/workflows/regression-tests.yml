name: Hardcoded Values Regression Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  regression-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better analysis

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run hardcoded values regression tests
      id: regression
      run: |
        npm run test -- tests/regression/hardcoded-values.test.ts --verbose
      continue-on-error: true

    - name: Upload HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: regression-report-${{ matrix.node-version }}
        path: tests/results/hardcoded-values-report.html
        retention-days: 30

    - name: Comment PR with results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const reportPath = 'tests/results/hardcoded-values-report.html';

          let comment = '## üîç Hardcoded Values Regression Test Results\n\n';

          if (fs.existsSync(reportPath)) {
            const report = fs.readFileSync(reportPath, 'utf-8');
            const criticalMatch = report.match(/<div class="value">(\d+)<\/div>[\s\S]*?Critical Issues/);
            const totalMatch = report.match(/<div class="value">(\d+)<\/div>[\s\S]*?Total Issues/);

            const criticalIssues = criticalMatch ? parseInt(criticalMatch[1]) : 0;
            const totalIssues = totalMatch ? parseInt(totalMatch[1]) : 0;

            if (criticalIssues === 0 && totalIssues === 0) {
              comment += '### ‚úÖ All tests passed!\n\n';
              comment += 'No hardcoded values detected in the codebase.\n';
            } else {
              comment += '### ‚ùå Issues detected\n\n';
              comment += `- **Critical Issues:** ${criticalIssues}\n`;
              comment += `- **Total Issues:** ${totalIssues}\n\n`;
              comment += '**Action Required:** Please review and fix the hardcoded values before merging.\n\n';
              comment += 'üìä Download the detailed HTML report from the workflow artifacts.\n';
            }
          } else {
            comment += '‚ö†Ô∏è Could not generate report. Check workflow logs for details.\n';
          }

          comment += '\n---\n';
          comment += `Node Version: ${{ matrix.node-version }}\n`;
          comment += `Commit: ${context.sha.substring(0, 7)}\n`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Fail workflow if critical issues found
      if: steps.regression.outcome == 'failure'
      run: |
        echo "‚ùå Regression tests failed - hardcoded values detected!"
        echo "Please review the test output and fix any hardcoded metric values."
        exit 1

  code-quality-gate:
    runs-on: ubuntu-latest
    needs: regression-tests
    if: github.event_name == 'pull_request'

    steps:
    - name: Check regression test status
      run: |
        echo "‚úÖ Code quality gate passed - no hardcoded values detected"

    - name: Add success label
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['regression-tests-passed']
          });
